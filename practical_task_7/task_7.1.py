# 7.1[34]: Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. Поскольку разобраться в его кричалках 
# не настолько просто, насколько легко он их придумывает, Вам стоит написать программу. Винни-Пух считает, 
# что ритм есть, если число слогов (т.е. число гласных букв) в каждой фразе стихотворения одинаковое. Фраза может 
# состоять из одного слова, если во фразе несколько слов, то они разделяются дефисами. Фразы отделяются друг от друга пробелами.
# Написать функцию, которая принимает строку текста и проверяет ее ритм (по Винни-Пуху)
# Если ритм есть, функция возвращает True, иначе возвращает False

# Примеры/Тесты:
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам") -> True
#     <function_name>("пара-ра-рам рам-пум-пупам па-ре-по-дам") -> True
#     <function_name>("пара-ра-рам рам-пуум-пупам па-ре-по-дам") -> False
#     <function_name>("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па") -> False
#     <function_name>("Пам-парам-пурум Пум-пурум-карам") -> True
# Примечание.

# Подумайте об эффективности алгоритма. Какие структуры данных будут более эффективны по скорости.
# Алгоритм должен работать так, чтобы не делать лишних проверок. Подумайте, возможно некоторые проверки не нужны.

lst1 = "пара-ра-рам рам-пам-папам па-ра-па-дам"
lst2 = "пара-ра-рам рам-пум-пупам па-ре-по-дам"
lst3 = "пара-ра-рам рам-пуум-пупам па-ре-по-дам"
lst4 = "Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па"
lst5 = "Пам-парам-пурум Пум-пурум-карам"

vowel_letters = ('а', 'у', 'о', 'ы', 'и', 'э', 'я', 'ю', 'ё', 'е')

print('Задача 7.1 без звездочки.')

def is_poem(lst: list) -> bool:
    all_str = lst.split()
    counter_vowels = [sum([1 for j in i if j in vowel_letters]) for i in all_str]
    return all([counter_vowels[0] == i for i in counter_vowels])


# Тесты
res = is_poem(lst1) # True
print(res)
res = is_poem(lst2) # True
print(res)
res = is_poem(lst3) # False
print(res)
res = is_poem(lst4) # False
print(res)
res = is_poem(lst5) # True
print(res)
print('-' * 20, end='\n\n')

# (*) Усложнение.

# Функция имеет параметр, который определяет, надо ли возвращать полную информацию о кол-ве гласных букв в фразах. 
# Эта информация возвращается в виде списка словарей. Каждый элемент списка(словарь) соответствует фразе.

# Примеры/Тесты:
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам", False) -> True
#     <function_name>("пара-ра-рам рам-пам-папам па-ра-па-дам", True) -> (True, [{'а': 4}, {'а': 4}, {'а': 4}])
#     <function_name>("пара-ра-рам рам-пум-пупам па-ре-по-дам") -> (True, [{'а': 4}, {'а': 2, 'у': 2}, {'а': 2, 'е': 1, 'о': 1}])
# ===================================================
# !!! Ошибка в тестовых данных !!! Строка состоит из 3-х фраз, значит в результате мы должны получить 3 словаря!!!
#     <function_name>("пара-ра-рам рам-пуум-пупам па-ре-по-дам") -> (False, [{'а': 4}, {'а': 2, 'у': 3}])
# ===================================================
#     <function_name>("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па") -> (False, [{'а': 11}, {'у': 6, 'а': 3}])
#     <function_name>("Пам-парам-пурум Пум-пурум-карам") -> (True, [{'а': 3, 'у': 2}, {'у': 3, 'а': 2}])

print('Задача 7.1 со звездочкой.')

def is_poem_new(lst: list, status=True):
    all_str = lst.split()
    counter_vowels = [{j: i.count(j) for j in i if j in vowel_letters} for i in all_str]
    if status:
        return all([sum(counter_vowels[0].values()) == sum(i.values()) for i in counter_vowels]), counter_vowels
    else:
        return all([sum(counter_vowels[0].values()) == sum(i.values()) for i in counter_vowels])



print(is_poem_new("пара-ра-рам рам-пам-папам па-ра-па-дам", False)) # True
print(is_poem_new("пара-ра-рам рам-пам-папам па-ра-па-дам", True)) # (True, [{'а': 4}, {'а': 4}, {'а': 4}])
print(is_poem_new("пара-ра-рам рам-пум-пупам па-ре-по-дам")) # (True, [{'а': 4}, {'а': 2, 'у': 2}, {'а': 2, 'е': 1, 'о': 1}])
print(is_poem_new("пара-ра-рам рам-пуум-пупам па-ре-по-дам")) # (False, [{'а': 4}, {'а': 2, 'у': 3}])
print(is_poem_new("Трам-пара-папам-парам-па-пам-пам-па Пум-пурум-пу-пурум-трам-пам-па")) # (False, [{'а': 11}, {'у': 6, 'а': 3}])
print(is_poem_new("Пам-парам-пурум Пум-пурум-карам")) # (True, [{'а': 3, 'у': 2}, {'у': 3, 'а': 2}])
print()
print('В тестовых данных пристутствует ошибка. Смотри описание на 58 строке кода.')